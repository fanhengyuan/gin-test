basePath: '{{.BasePath}}'
definitions:
  authController.AuthStruct:
    properties:
      password:
        minLength: 4
        type: string
      user_name:
        minLength: 1
        type: string
    required:
    - password
    - user_name
    type: object
  common.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  reportService.ReportStruct:
    properties:
      activity_id:
        type: integer
      name:
        minLength: 1
        type: string
      phone:
        minLength: 4
        type: string
    required:
    - name
    - phone
    type: object
  userService.UserLoginStruct:
    properties:
      password:
        description: 密码
        minLength: 6
        type: string
      username:
        description: 用户名
        minLength: 4
        type: string
    required:
    - password
    - username
    type: object
host: '{{.Host}}'
info:
  contact: {}
  description: An example of gin
  license:
    name: MIT
    url: https://github.com/fanhengyuan/gin-test/blob/master/LICENSE
  termsOfService: https://github.com/fanhengyuan/gin-test
  title: Gin Web Test
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Test db Connections.
      parameters:
      - description: user login
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authController.AuthStruct'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
            type: object
      summary: User Login
      tags:
      - Auth
  /report:
    post:
      consumes:
      - application/json
      description: User Report Information
      parameters:
      - description: 上报信息
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/reportService.ReportStruct'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
            type: object
      summary: Report Information
      tags:
      - Report
  /sys/routers:
    get:
      consumes:
      - application/json
      description: get router list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Routers
      tags:
      - SYS
  /test/font:
    get:
      parameters:
      - description: base64 string
        in: query
        name: base64
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.Response'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Base64 Decode
      tags:
      - Test
  /test/login:
    post:
      consumes:
      - application/json
      description: Test db Connections.
      parameters:
      - description: user login
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/userService.UserLoginStruct'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
            type: object
      security:
      - ApiKeyAuth: []
      summary: User Login
      tags:
      - Test
  /test/ping:
    get:
      consumes:
      - application/json
      description: Test Ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Ping
      tags:
      - Test
  /test/test_users:
    get:
      consumes:
      - application/json
      description: Test db Connections.
      parameters:
      - description: page number
        in: query
        name: p
        required: true
        type: integer
      - description: page limit
        in: query
        name: "n"
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.Response'
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get Users
      tags:
      - Test
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
